#14December2022
#Impute OOR values



#Step1:
library(readr)
library(tidyverse)
library(magrittr)
library(utils)

#First import data set:
predlum <- read_csv("predlum.csv")

#Assuming that your data set was exported with all the columns and consist of the "obs_conc" variable.

#Step2:
#Create "rds" and "csv" folders for the output data.
dir.create("./rds")

dir.create("./csv")

#Run the R functions in this script and then include your data set name
#e.g., Run this R script. Then Run "remove_symbols(dataset_project)" in the console.


#Step 3:
#Use the "remove_symbols" function to classify missing data, add metadata variables to the data set and remove symbols.

remove_symbols <- function(dataName = "dataset_project"){
  #' @importFrom dplyr mutate
  #' @importFrom magrittr %>%
  dataName <- dataName %>%
    mutate(
      meta_truemissing=ifelse(
        obs_conc == ""
        , TRUE
        , FALSE
      )
      , meta_threestar=ifelse(
        grepl("***", obs_conc,fixed=TRUE)
        , TRUE
        , FALSE
      )
      , meta_onestar=ifelse(
        grepl("^\\*\\d+", obs_conc, perl=TRUE)
        , TRUE
        , FALSE
      )
      , meta_oorgt=ifelse(
        grepl("OOR >", obs_conc, perl=TRUE)
        , TRUE
        , FALSE
      )
      , meta_oorlt=ifelse(
        grepl("OOR <", obs_conc, perl=TRUE)
        , TRUE
        , FALSE
      )
      , obs_conc_numerics=as.numeric(
        gsub(
          "\\D*(\\d+(?:\\.\\d+)*(?:E[+-]\\d+)*)"
          ,"\\1"
          ,obs_conc,perl=T
        )
      )
    )
  # Save in RDS object.
  saveRDS(dataName, "./rds/dataset_project.rds")
}


#Step 4:
remove_symbols(predlum)

#Step 5:
#Read in data set after symbols have been removed.
dataset_project <- readRDS("./rds/dataset_project.rds")

#Step 6:
#Impute the OOR values, oor below (<) and oor above (>) values.
#Assuming the following variables and variable names are in your data set, e.g.,
#"analyte" containing the analyte names.
#"obs_conc_numerics" created in the previouse step.

impute <- function(dataName = "dataset_project") {
  #' @importFrom dplyr arrange count group_by summarise
  #' @importFrom magrittr %>%
  #' @importFrom tidyr pivot_wider
  #' @importFrom utils write.csv
  df_rawminmaxv <- dataName %>%
    group_by(analyte) %>%
    summarise(
      Min = min(obs_conc_numerics, na.rm = TRUE),
      Max = max(obs_conc_numerics, na.rm = TRUE)
    )
  # Join experiment data and the table with the min and max analyte
  # concentrations.
  df_rawminmaxv <- left_join(dataName, df_rawminmaxv)
  # Impute OOR below (<) and OOR above (>) values.
  imp <- df_rawminmaxv %>%
    mutate(
      obs_conc_impute =
        ifelse(
          meta_oorlt == TRUE,
          0,
          ifelse(
            meta_oorgt == TRUE,
            Max + ((Max - Min) * 0.0001),
            obs_conc_numerics
          )
        )
    ) %>%
    select(-Min,-Max)
  # Round Obs.Conc.Impute to two decimal places.
  imp$obs_conc_impute <- round(imp$obs_conc_impute, 2)
  # Save data to disk in RDS format.
  saveRDS(imp, "./rds/dataset_project.rds")
  # Save data to disk in CSV format.
  write.csv(imp, file = "./csv/dataset_project.csv")
}

#Step 7:
impute(dataset_project)

#Step 8:
#Read in data set after symbols imputation.
dataset_project <- readRDS("./rds/dataset_project.rds")

#Step 9:
View(dataset_project)
